eureka:
   client:
      serviceUrl:
         defaultZone: http://eureka:password@localhost:8761/eureka
spring:
   application:
      name: notification-service
   kafka:
      bootstrap-servers: localhost:9092
      template:
         default-topic: notificationTopic
      consumer:
         key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
         value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
# while sending a message from producer to consumer, though we have defined classes
# which are for sending message and receive message, from kafka perspective those
# are two different entities and could not be understood by consumer automatially.
# We need to define mapping on both consumer and producer side.
         properties:
            '[spring.json.type.mapping]': event:com.rcode.notificationservice.event.OrderPlacedEvent
# Not having group-id property, while starting notification kafka consumer app, we can get below error
# Caused by: java.lang.IllegalStateException: No group.id found in consumer config, container properties, or @KafkaListener annotation; a group.id is required when group management is used.
# We need to define group-id for consumer
         group-id: notificationId
server:
   port: 8085